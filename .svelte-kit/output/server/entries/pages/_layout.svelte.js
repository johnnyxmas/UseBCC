import{c as t,b as A,v as e,e as n,m as o,S as C,M as r}from"../../chunks/lucide.js";const a={code:".theme-toggle.svelte-ox1v3o{position:fixed;top:1rem;right:1rem;z-index:1000}.toggle-button.svelte-ox1v3o{display:flex;align-items:center;gap:0.5rem;padding:0.5rem 0.75rem;background:var(--color-bg-secondary);color:var(--color-text);border:1px solid var(--color-border);border-radius:0.5rem;cursor:pointer;font-size:0.875rem;font-weight:500;font-family:inherit;box-shadow:0 1px 3px 0 rgb(0 0 0 / 0.1)}.toggle-button.svelte-ox1v3o:hover{background:var(--color-bg)}.toggle-label.svelte-ox1v3o{min-width:3rem;text-align:left}.chevron.svelte-ox1v3o{transition:transform 0.2s}.chevron.open.svelte-ox1v3o{transform:rotate(180deg)}.dropdown.svelte-ox1v3o{position:absolute;top:calc(100% + 0.5rem);right:0;min-width:150px;background:var(--color-bg-secondary);border:1px solid var(--color-border);border-radius:0.5rem;box-shadow:0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);overflow:hidden}.dropdown-item.svelte-ox1v3o{display:flex;align-items:center;gap:0.75rem;width:100%;padding:0.625rem 0.875rem;background:transparent;color:var(--color-text-secondary);border:none;cursor:pointer;font-size:0.875rem;font-family:inherit;text-align:left;position:relative}.dropdown-item.svelte-ox1v3o:hover{background:var(--color-bg);color:var(--color-text)}.dropdown-item.active.svelte-ox1v3o{color:var(--color-primary);font-weight:500}.check.svelte-ox1v3o{margin-left:auto;color:var(--color-primary)}.dark .toggle-button.svelte-ox1v3o{box-shadow:0 1px 3px 0 rgb(0 0 0 / 0.3)}.dark .dropdown.svelte-ox1v3o{box-shadow:0 10px 15px -3px rgb(0 0 0 / 0.3), 0 4px 6px -4px rgb(0 0 0 / 0.3)}@media(max-width: 768px){.theme-toggle.svelte-ox1v3o{top:0.75rem;right:0.75rem}.toggle-button.svelte-ox1v3o{padding:0.375rem 0.625rem;font-size:0.8125rem}.toggle-label.svelte-ox1v3o{display:none}.chevron.svelte-ox1v3o{display:none}}",map:'{"version":3,"file":"ThemeToggle.svelte","sources":["ThemeToggle.svelte"],"sourcesContent":["<script>\\n\\timport { onMount } from \'svelte\';\\n\\timport { Sun, Moon, Monitor } from \'lucide-svelte\';\\n\\t\\n\\tlet theme = \'auto\';\\n\\tlet isOpen = false;\\n\\t\\n\\t// Dynamic themes array that updates based on system preference\\n\\t$: themes = [\\n\\t\\t{ value: \'auto\', label: \'Auto\', icon: systemPrefersDark ? Moon : Sun },\\n\\t\\t{ value: \'light\', label: \'Light\', icon: Sun },\\n\\t\\t{ value: \'dark\', label: \'Dark\', icon: Moon }\\n\\t];\\n\\t\\n\\tonMount(() => {\\n\\t\\t// Load saved theme preference\\n\\t\\tconst savedTheme = localStorage.getItem(\'theme\') || \'auto\';\\n\\t\\ttheme = savedTheme;\\n\\t\\tapplyTheme(savedTheme);\\n\\t\\t\\n\\t\\t// Check initial system preference\\n\\t\\tconst mediaQuery = window.matchMedia(\'(prefers-color-scheme: dark)\');\\n\\t\\tsystemPrefersDark = mediaQuery.matches;\\n\\t\\t\\n\\t\\t// Listen for system theme changes\\n\\t\\tmediaQuery.addEventListener(\'change\', (e) => {\\n\\t\\t\\tsystemPrefersDark = e.matches;\\n\\t\\t\\tif (theme === \'auto\') {\\n\\t\\t\\t\\tapplyTheme(\'auto\');\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\t\\n\\t\\t// Close dropdown when clicking outside\\n\\t\\tconst handleClickOutside = (event) => {\\n\\t\\t\\tif (!event.target.closest(\'.theme-toggle\')) {\\n\\t\\t\\t\\tisOpen = false;\\n\\t\\t\\t}\\n\\t\\t};\\n\\t\\t\\n\\t\\tdocument.addEventListener(\'click\', handleClickOutside);\\n\\t\\t\\n\\t\\treturn () => {\\n\\t\\t\\tdocument.removeEventListener(\'click\', handleClickOutside);\\n\\t\\t};\\n\\t});\\n\\t\\n\\tfunction applyTheme(selectedTheme) {\\n\\t\\tconst root = document.documentElement;\\n\\t\\t\\n\\t\\tif (selectedTheme === \'auto\') {\\n\\t\\t\\t// Remove manual theme classes and let CSS media query handle it\\n\\t\\t\\troot.classList.remove(\'light\', \'dark\');\\n\\t\\t} else if (selectedTheme === \'light\') {\\n\\t\\t\\troot.classList.remove(\'dark\');\\n\\t\\t\\troot.classList.add(\'light\');\\n\\t\\t} else if (selectedTheme === \'dark\') {\\n\\t\\t\\troot.classList.remove(\'light\');\\n\\t\\t\\troot.classList.add(\'dark\');\\n\\t\\t}\\n\\t}\\n\\t\\n\\tfunction selectTheme(selectedTheme) {\\n\\t\\ttheme = selectedTheme;\\n\\t\\tlocalStorage.setItem(\'theme\', selectedTheme);\\n\\t\\tapplyTheme(selectedTheme);\\n\\t\\tisOpen = false;\\n\\t}\\n\\t\\n\\tfunction toggleDropdown() {\\n\\t\\tisOpen = !isOpen;\\n\\t}\\n\\t\\n\\t// Reactive statement to determine actual theme\\n\\tlet systemPrefersDark = false;\\n\\t\\n\\t$: actualTheme = theme === \'auto\'\\n\\t\\t? (systemPrefersDark ? \'dark\' : \'light\')\\n\\t\\t: theme;\\n\\t\\n\\t$: currentTheme = themes.find(t => t.value === theme);\\n\\t// Show sun/moon based on actual theme, including for auto mode\\n\\t$: CurrentIcon = actualTheme === \'dark\' ? Moon : Sun;\\n<\/script>\\n\\n<div class=\\"theme-toggle\\">\\n\\t<button \\n\\t\\tclass=\\"toggle-button\\"\\n\\t\\ton:click={toggleDropdown}\\n\\t\\taria-label=\\"Toggle theme\\"\\n\\t\\taria-expanded={isOpen}\\n\\t>\\n\\t\\t<svelte:component this={CurrentIcon} size={20} />\\n\\t\\t<span class=\\"toggle-label\\">{currentTheme?.label}</span>\\n\\t\\t<svg \\n\\t\\t\\tclass=\\"chevron\\" \\n\\t\\t\\tclass:open={isOpen}\\n\\t\\t\\twidth=\\"12\\" \\n\\t\\t\\theight=\\"12\\" \\n\\t\\t\\tviewBox=\\"0 0 12 12\\"\\n\\t\\t>\\n\\t\\t\\t<path d=\\"M3 4.5L6 7.5L9 4.5\\" stroke=\\"currentColor\\" stroke-width=\\"2\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" fill=\\"none\\"/>\\n\\t\\t</svg>\\n\\t</button>\\n\\t\\n\\t{#if isOpen}\\n\\t\\t<div class=\\"dropdown\\">\\n\\t\\t\\t{#each themes as themeOption}\\n\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\tclass=\\"dropdown-item\\"\\n\\t\\t\\t\\t\\tclass:active={theme === themeOption.value}\\n\\t\\t\\t\\t\\ton:click={() => selectTheme(themeOption.value)}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<svelte:component this={themeOption.icon} size={18} />\\n\\t\\t\\t\\t\\t<span>{themeOption.label}</span>\\n\\t\\t\\t\\t\\t{#if theme === themeOption.value}\\n\\t\\t\\t\\t\\t\\t<svg class=\\"check\\" width=\\"16\\" height=\\"16\\" viewBox=\\"0 0 16 16\\">\\n\\t\\t\\t\\t\\t\\t\\t<path d=\\"M13.5 4.5L6 12L2.5 8.5\\" stroke=\\"currentColor\\" stroke-width=\\"2\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" fill=\\"none\\"/>\\n\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t{/if}\\n</div>\\n\\n<style>\\n\\t.theme-toggle {\\n\\t\\tposition: fixed;\\n\\t\\ttop: 1rem;\\n\\t\\tright: 1rem;\\n\\t\\tz-index: 1000;\\n\\t}\\n\\t\\n\\t.toggle-button {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.5rem;\\n\\t\\tpadding: 0.5rem 0.75rem;\\n\\t\\tbackground: var(--color-bg-secondary);\\n\\t\\tcolor: var(--color-text);\\n\\t\\tborder: 1px solid var(--color-border);\\n\\t\\tborder-radius: 0.5rem;\\n\\t\\tcursor: pointer;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tfont-weight: 500;\\n\\t\\tfont-family: inherit;\\n\\t\\tbox-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);\\n\\t}\\n\\t\\n\\t.toggle-button:hover {\\n\\t\\tbackground: var(--color-bg);\\n\\t}\\n\\t\\n\\t.toggle-label {\\n\\t\\tmin-width: 3rem;\\n\\t\\ttext-align: left;\\n\\t}\\n\\t\\n\\t.chevron {\\n\\t\\ttransition: transform 0.2s;\\n\\t}\\n\\t\\n\\t.chevron.open {\\n\\t\\ttransform: rotate(180deg);\\n\\t}\\n\\t\\n\\t.dropdown {\\n\\t\\tposition: absolute;\\n\\t\\ttop: calc(100% + 0.5rem);\\n\\t\\tright: 0;\\n\\t\\tmin-width: 150px;\\n\\t\\tbackground: var(--color-bg-secondary);\\n\\t\\tborder: 1px solid var(--color-border);\\n\\t\\tborder-radius: 0.5rem;\\n\\t\\tbox-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\\n\\t\\toverflow: hidden;\\n\\t}\\n\\t\\n\\t.dropdown-item {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.75rem;\\n\\t\\twidth: 100%;\\n\\t\\tpadding: 0.625rem 0.875rem;\\n\\t\\tbackground: transparent;\\n\\t\\tcolor: var(--color-text-secondary);\\n\\t\\tborder: none;\\n\\t\\tcursor: pointer;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tfont-family: inherit;\\n\\t\\ttext-align: left;\\n\\t\\tposition: relative;\\n\\t}\\n\\t\\n\\t.dropdown-item:hover {\\n\\t\\tbackground: var(--color-bg);\\n\\t\\tcolor: var(--color-text);\\n\\t}\\n\\t\\n\\t.dropdown-item.active {\\n\\t\\tcolor: var(--color-primary);\\n\\t\\tfont-weight: 500;\\n\\t}\\n\\t\\n\\t.check {\\n\\t\\tmargin-left: auto;\\n\\t\\tcolor: var(--color-primary);\\n\\t}\\n\\t\\n\\t/* Dark mode specific styles */\\n\\t:global(.dark) .toggle-button {\\n\\t\\tbox-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.3);\\n\\t}\\n\\t\\n\\t:global(.dark) .dropdown {\\n\\t\\tbox-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.3), 0 4px 6px -4px rgb(0 0 0 / 0.3);\\n\\t}\\n\\t\\n\\t/* Mobile responsive */\\n\\t@media (max-width: 768px) {\\n\\t\\t.theme-toggle {\\n\\t\\t\\ttop: 0.75rem;\\n\\t\\t\\tright: 0.75rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.toggle-button {\\n\\t\\t\\tpadding: 0.375rem 0.625rem;\\n\\t\\t\\tfont-size: 0.8125rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.toggle-label {\\n\\t\\t\\tdisplay: none;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.chevron {\\n\\t\\t\\tdisplay: none;\\n\\t\\t}\\n\\t}\\n</style>"],"names":[],"mappings":"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"}'},l=t((t,l,s,i)=>{let d,c,m,p;return t.css.add(a),d=[{value:"auto",label:"Auto",icon:C},{value:"light",label:"Light",icon:C},{value:"dark",label:"Dark",icon:r}],c="light",m=d.find(t=>"auto"===t.value),p=C,`<div class="theme-toggle svelte-ox1v3o"><button class="toggle-button svelte-ox1v3o" aria-label="Toggle theme"${A("aria-expanded",!1,0)}>${e(p||o,"svelte:component").$$render(t,{size:20},{},{})} <span class="toggle-label svelte-ox1v3o">${n(m?.label)}</span> <svg class="${["chevron svelte-ox1v3o",""].join(" ").trim()}" width="12" height="12" viewBox="0 0 12 12"><path d="M3 4.5L6 7.5L9 4.5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" fill="none"></path></svg></button>  </div>`}),s={code:"main.svelte-60qo7j{min-height:100vh;width:100%}",map:'{"version":3,"file":"+layout.svelte","sources":["+layout.svelte"],"sourcesContent":["<script>\\n\\timport \'../app.css\';\\n\\timport ThemeToggle from \'$lib/components/ThemeToggle.svelte\';\\n<\/script>\\n\\n<ThemeToggle />\\n\\n<main>\\n\\t<slot />\\n</main>\\n\\n<style>\\n\\tmain {\\n\\t\\tmin-height: 100vh;\\n\\t\\twidth: 100%;\\n\\t}\\n</style>"],"names":[],"mappings":"AAYC,kBAAK,CACJ,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,IACR"}'},i=t((t,A,n,o)=>(t.css.add(s),`${e(l,"ThemeToggle").$$render(t,{},{},{})} <main class="svelte-60qo7j">${o.default?o.default({}):""} </main>`));export{i as default};
