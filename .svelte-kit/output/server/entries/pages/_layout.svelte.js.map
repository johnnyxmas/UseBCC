{"version":3,"file":"_layout.svelte.js","sources":["../../../../../src/lib/components/ThemeToggle.svelte"],"sourcesContent":["<script>\n\timport { onMount } from 'svelte';\n\timport { Sun, Moon, Monitor } from 'lucide-svelte';\n\t\n\tlet theme = 'auto';\n\tlet isOpen = false;\n\t\n\t// Dynamic themes array that updates based on system preference\n\t$: themes = [\n\t\t{ value: 'auto', label: 'Auto', icon: systemPrefersDark ? Moon : Sun },\n\t\t{ value: 'light', label: 'Light', icon: Sun },\n\t\t{ value: 'dark', label: 'Dark', icon: Moon }\n\t];\n\t\n\tonMount(() => {\n\t\t// Load saved theme preference\n\t\tconst savedTheme = localStorage.getItem('theme') || 'auto';\n\t\ttheme = savedTheme;\n\t\tapplyTheme(savedTheme);\n\t\t\n\t\t// Check initial system preference\n\t\tconst mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\t\tsystemPrefersDark = mediaQuery.matches;\n\t\t\n\t\t// Listen for system theme changes\n\t\tmediaQuery.addEventListener('change', (e) => {\n\t\t\tsystemPrefersDark = e.matches;\n\t\t\tif (theme === 'auto') {\n\t\t\t\tapplyTheme('auto');\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Close dropdown when clicking outside\n\t\tconst handleClickOutside = (event) => {\n\t\t\tif (!event.target.closest('.theme-toggle')) {\n\t\t\t\tisOpen = false;\n\t\t\t}\n\t\t};\n\t\t\n\t\tdocument.addEventListener('click', handleClickOutside);\n\t\t\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', handleClickOutside);\n\t\t};\n\t});\n\t\n\tfunction applyTheme(selectedTheme) {\n\t\tconst root = document.documentElement;\n\t\t\n\t\tif (selectedTheme === 'auto') {\n\t\t\t// Remove manual theme classes and let CSS media query handle it\n\t\t\troot.classList.remove('light', 'dark');\n\t\t} else if (selectedTheme === 'light') {\n\t\t\troot.classList.remove('dark');\n\t\t\troot.classList.add('light');\n\t\t} else if (selectedTheme === 'dark') {\n\t\t\troot.classList.remove('light');\n\t\t\troot.classList.add('dark');\n\t\t}\n\t}\n\t\n\tfunction selectTheme(selectedTheme) {\n\t\ttheme = selectedTheme;\n\t\tlocalStorage.setItem('theme', selectedTheme);\n\t\tapplyTheme(selectedTheme);\n\t\tisOpen = false;\n\t}\n\t\n\tfunction toggleDropdown() {\n\t\tisOpen = !isOpen;\n\t}\n\t\n\t// Reactive statement to determine actual theme\n\tlet systemPrefersDark = false;\n\t\n\t$: actualTheme = theme === 'auto'\n\t\t? (systemPrefersDark ? 'dark' : 'light')\n\t\t: theme;\n\t\n\t$: currentTheme = themes.find(t => t.value === theme);\n\t// Show sun/moon based on actual theme, including for auto mode\n\t$: CurrentIcon = actualTheme === 'dark' ? Moon : Sun;\n</script>\n\n<div class=\"theme-toggle\">\n\t<button \n\t\tclass=\"toggle-button\"\n\t\ton:click={toggleDropdown}\n\t\taria-label=\"Toggle theme\"\n\t\taria-expanded={isOpen}\n\t>\n\t\t<svelte:component this={CurrentIcon} size={20} />\n\t\t<span class=\"toggle-label\">{currentTheme?.label}</span>\n\t\t<svg \n\t\t\tclass=\"chevron\" \n\t\t\tclass:open={isOpen}\n\t\t\twidth=\"12\" \n\t\t\theight=\"12\" \n\t\t\tviewBox=\"0 0 12 12\"\n\t\t>\n\t\t\t<path d=\"M3 4.5L6 7.5L9 4.5\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t</button>\n\t\n\t{#if isOpen}\n\t\t<div class=\"dropdown\">\n\t\t\t{#each themes as themeOption}\n\t\t\t\t<button\n\t\t\t\t\tclass=\"dropdown-item\"\n\t\t\t\t\tclass:active={theme === themeOption.value}\n\t\t\t\t\ton:click={() => selectTheme(themeOption.value)}\n\t\t\t\t>\n\t\t\t\t\t<svelte:component this={themeOption.icon} size={18} />\n\t\t\t\t\t<span>{themeOption.label}</span>\n\t\t\t\t\t{#if theme === themeOption.value}\n\t\t\t\t\t\t<svg class=\"check\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n\t\t\t\t\t\t\t<path d=\"M13.5 4.5L6 12L2.5 8.5\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t{/if}\n\t\t\t\t</button>\n\t\t\t{/each}\n\t\t</div>\n\t{/if}\n</div>\n\n<style>\n\t.theme-toggle {\n\t\tposition: fixed;\n\t\ttop: 1rem;\n\t\tright: 1rem;\n\t\tz-index: 1000;\n\t}\n\t\n\t.toggle-button {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 0.5rem;\n\t\tpadding: 0.5rem 0.75rem;\n\t\tbackground: var(--color-bg-secondary);\n\t\tcolor: var(--color-text);\n\t\tborder: 1px solid var(--color-border);\n\t\tborder-radius: 0.5rem;\n\t\tcursor: pointer;\n\t\tfont-size: 0.875rem;\n\t\tfont-weight: 500;\n\t\tfont-family: inherit;\n\t\tbox-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);\n\t}\n\t\n\t.toggle-button:hover {\n\t\tbackground: var(--color-bg);\n\t}\n\t\n\t.toggle-label {\n\t\tmin-width: 3rem;\n\t\ttext-align: left;\n\t}\n\t\n\t.chevron {\n\t\ttransition: transform 0.2s;\n\t}\n\t\n\t.chevron.open {\n\t\ttransform: rotate(180deg);\n\t}\n\t\n\t.dropdown {\n\t\tposition: absolute;\n\t\ttop: calc(100% + 0.5rem);\n\t\tright: 0;\n\t\tmin-width: 150px;\n\t\tbackground: var(--color-bg-secondary);\n\t\tborder: 1px solid var(--color-border);\n\t\tborder-radius: 0.5rem;\n\t\tbox-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n\t\toverflow: hidden;\n\t}\n\t\n\t.dropdown-item {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 0.75rem;\n\t\twidth: 100%;\n\t\tpadding: 0.625rem 0.875rem;\n\t\tbackground: transparent;\n\t\tcolor: var(--color-text-secondary);\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\tfont-size: 0.875rem;\n\t\tfont-family: inherit;\n\t\ttext-align: left;\n\t\tposition: relative;\n\t}\n\t\n\t.dropdown-item:hover {\n\t\tbackground: var(--color-bg);\n\t\tcolor: var(--color-text);\n\t}\n\t\n\t.dropdown-item.active {\n\t\tcolor: var(--color-primary);\n\t\tfont-weight: 500;\n\t}\n\t\n\t.check {\n\t\tmargin-left: auto;\n\t\tcolor: var(--color-primary);\n\t}\n\t\n\t/* Dark mode specific styles */\n\t:global(.dark) .toggle-button {\n\t\tbox-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.3);\n\t}\n\t\n\t:global(.dark) .dropdown {\n\t\tbox-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.3), 0 4px 6px -4px rgb(0 0 0 / 0.3);\n\t}\n\t\n\t/* Mobile responsive */\n\t@media (max-width: 768px) {\n\t\t.theme-toggle {\n\t\t\ttop: 0.75rem;\n\t\t\tright: 0.75rem;\n\t\t}\n\t\t\n\t\t.toggle-button {\n\t\t\tpadding: 0.375rem 0.625rem;\n\t\t\tfont-size: 0.8125rem;\n\t\t}\n\t\t\n\t\t.toggle-label {\n\t\t\tdisplay: none;\n\t\t}\n\t\t\n\t\t.chevron {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n</style>"],"names":["themes","value","label","icon","Sun","Moon","actualTheme","currentTheme","find","t","CurrentIcon","validate_component","missing_component","$$render","$$result","size","escape","join","trim"],"mappings":"ymWAQIA,EAAM,EACNC,MAAO,OAAQC,MAAO,OAAQC,KAAiCC,IAC/DH,MAAO,QAASC,MAAO,QAASC,KAAMC,IACtCH,MAAO,OAAQC,MAAO,OAAQC,KAAME,IAgEpCC,EAC8B,QAG9BC,EAAeP,EAAOQ,KAAKC,GA3ElB,SA2EuBA,EAAER,OAElCS,EAA8CN,qIA5EpC,EAoFS,MAAAO,EAEGD,GAAWE,EAAA,oBAAAC,SAAAC,EAAA,CAAAC,KAAQ,IAAE,CAAA,EAAA,CAAA,+CAAAC,EACjBT,GAAcL,6BAAK,CAAA,wBAG5B,IAAAe,KAAA,KAAAC"}